stages:
  - test
  - release jars
  - build image

variables:
  DOCKER_TLS_CERTDIR: ""
  DOCKER_HOST: tcp://localhost:2375
  DOCKER_DRIVER: overlay2
  MYSQL_ROOT_PASSWORD: "root"
  MYSQL_DATABASE: "ota_tuf"
  MYSQL_USER: "ota_tuf"
  MYSQL_PASSWORD: "ota_tuf"
  SBT_OPTS: "-sbt-launch-dir .sbt/launchers -sbt-dir .sbt -ivy .ivy2 -Dsbt.color=true -Dscala.color=true"
  PUBLISH_REALM: Artifactory Realm
  ARTIFACTORY_USERNAME: cicd-innovation
  ARTIFACTORY_URL: https://artifactory-horw.int.toradex.com/artifactory

include:
  - project: rd/innovation/continuous-delivery/ci-container-build
    ref: scala-ci-img
    file: gitlab-ci-templates/jfrog-sbt-docker-publish.yaml

image: artifactory-horw.int.toradex.com/ota-docker-dev-horw/tdx-inno-ci-scala:0.0.1

services:
  - name: docker:dind

test:
  stage: test
  only:
    refs:
      - master
  services:
    - name: advancedtelematic/tuf-nginx:latest
      alias: tuf-nginx
    - name: mariadb:10.4
      alias: db
      command:
        - --character-set-server=utf8
        - --collation-server=utf8_unicode_ci
        - --max_connections=1000
  variables:
    DB_URL: "jdbc:mariadb://db:3306/ota_tuf"
    MTLS_REPOSERVER_URI: "https://tuf-nginx:8181/"
  before_script:
    - ./deploy/gitlab-db-setup.sh mysql db
  script:
    - sbt ut:test
  cache:
    paths:
      - .ivy2/
      - .sbt/

release sbt artifacts:
  stage: release jars
  only:
    refs:
      - master
  script:
    - jfrog config add horw-artifacxtory --artifactory-url=$ARTIFACTORY_URL --user=$ARTIFACTORY_USERNAME --password=$ARTIFACTORY_PASSWORD
    - jfrog config show horw-artifacxtory
    - jfrog rt ping
    - git fetch origin master
    - export PUBLISH_USER=$ARTIFACTORY_USERNAME
    - export PUBLISH_URL="${ARTIFACTORY_URL}/ota-sbt-dev-horw;build.number=$CI_BUILD_ID;build.name=libtuf"
    - export PUBLISH_PASSWORD=$ARTIFACTORY_PASSWORD
    - jfrog rt build-collect-env libtuf $CI_BUILD_ID
    - sbt +publish
    - jfrog rt build-publish libtuf $CI_BUILD_ID
  cache:
    paths:
      - .ivy2/
      - .sbt/

build docker image reposerver:
  stage: build image
  # only:
  #   - master
  extends: .jfrog-sbt-docker-publish
  variables:
    ARTIFACTORY_REPO: ota-docker-dev-horw
    SERVICE_NAME: tuf-reposerver
    Sbt_NAME: reposerver/
  cache:
    paths:
      - .ivy2/
      - .sbt/

build docker image keyserver:
  # only:
  #   - master
  stage: build image
  extends: .jfrog-sbt-docker-publish
  variables:
    ARTIFACTORY_REPO: ota-docker-dev-horw
    SERVICE_NAME: tuf-keyserver
    SBT_NAME: keyserver/
  cache:
    paths:
      - .ivy2/
      - .sbt/
